"""Codex 31 July

Revision ID: 4b0611360b37
Revises: 3c870a7e6b9d
Create Date: 2025-07-31 10:14:49.422607

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4b0611360b37'
down_revision = '3c870a7e6b9d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('cart_item', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('shop_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False)
        batch_op.alter_column('item_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False)

    with op.batch_alter_table('consumer_profile', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('consumer_wallet', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('item', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('item_id_seq'::regclass)"))
        batch_op.alter_column('shop_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False)

    with op.batch_alter_table('order_item', schema=None) as batch_op:
        batch_op.alter_column('item_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False)

    with op.batch_alter_table('order_return', schema=None) as batch_op:
        batch_op.alter_column('item_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=True)

    with op.batch_alter_table('otp', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('shop', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('shop_id_seq'::regclass)"))

    with op.batch_alter_table('shop_action_log', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('shop_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False)

    with op.batch_alter_table('shop_hours', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('shop_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False)

    with op.batch_alter_table('vendor_document', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('vendor_payout_bank', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('vendor_profile', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('shop_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=True)

    with op.batch_alter_table('vendor_wallet', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('vendor_wallet_transaction', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('wallet_transaction', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('wallet_transaction', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('vendor_wallet_transaction', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('vendor_wallet', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('vendor_profile', schema=None) as batch_op:
        batch_op.alter_column('shop_id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.INTEGER(),
               existing_nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('vendor_payout_bank', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('vendor_document', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('shop_hours', schema=None) as batch_op:
        batch_op.alter_column('shop_id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.INTEGER(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('shop_action_log', schema=None) as batch_op:
        batch_op.alter_column('shop_id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.INTEGER(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('shop', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('shop_id_seq'::regclass)"))

    with op.batch_alter_table('otp', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('order_return', schema=None) as batch_op:
        batch_op.alter_column('item_id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.INTEGER(),
               existing_nullable=True)

    with op.batch_alter_table('order_item', schema=None) as batch_op:
        batch_op.alter_column('item_id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.INTEGER(),
               existing_nullable=False)

    with op.batch_alter_table('item', schema=None) as batch_op:
        batch_op.alter_column('shop_id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.INTEGER(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('item_id_seq'::regclass)"))

    with op.batch_alter_table('consumer_wallet', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('consumer_profile', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('cart_item', schema=None) as batch_op:
        batch_op.alter_column('item_id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.INTEGER(),
               existing_nullable=False)
        batch_op.alter_column('shop_id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.INTEGER(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###
